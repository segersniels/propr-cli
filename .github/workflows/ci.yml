on:
  push:
    branches:
      - master
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  build:
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        job:
          - {
              target: x86_64-unknown-linux-musl,
              exe: amd64-linux,
              os: ubuntu-latest,
            }
          - {
              target: aarch64-unknown-linux-musl,
              exe: aarch64-linux,
              os: ubuntu-latest,
            }
          - { target: x86_64-apple-darwin, exe: macos, os: macos-latest }
    runs-on: ${{ matrix.job.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}
          components: rust-src
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          args: --release --target=${{ matrix.job.target }} --locked
          command: build
      - name: Rename result
        run: cp target/${{ matrix.job.target }}/release/propr propr-${{ matrix.job.exe }}
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: bin
          path: propr-${{ matrix.job.exe }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    environment: production
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: bin
          path: bin
      - name: Get current package version
        id: current_version
        run: echo "version=$(make version)" >> $GITHUB_OUTPUT
      - uses: mukunku/tag-exists-action@v1.4.0
        id: check_tag
        with:
          tag: "${{ steps.current_version.outputs.version }}"
      - uses: "marvinpinto/action-automatic-releases@latest"
        if: steps.check_tag.outputs.exists == 'false'
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ steps.current_version.outputs.version }}"
          prerelease: false
          files: |
            ./bin/propr-macos
            ./bin/propr-aarch64-linux
            ./bin/propr-amd64-linux

  publish:
    needs: release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && needs.release.outputs.tag_exists == 'false'
    environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Publish to Cargo
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --allow-dirty
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
